Fix build of classic interpreter:

https://bugs.webkit.org/show_bug.cgi?id=95484
http://trac.webkit.org/changeset/127179

--- origsrc/webkit-efl-svn-r127150/Source/JavaScriptCore/interpreter/Interpreter.cpp	2012-08-30 13:44:46.000000000 -0500
+++ src/webkit-efl-svn-r127150/Source/JavaScriptCore/interpreter/Interpreter.cpp	2013-08-01 12:41:40.089111300 -0500
@@ -49,6 +49,7 @@
 #include "JSNotAnObject.h"
 #include "JSPropertyNameIterator.h"
 #include "JSString.h"
+#include "JSWithScope.h"
 #include "LiteralParser.h"
 #include "NameInstance.h"
 #include "ObjectPrototype.h"
@@ -2705,7 +2706,7 @@ JSValue Interpreter::privateExecute(Exec
             ++iter;
             ASSERT_UNUSED(end, iter != end);
         }
-        ASSERT((*iter)->isVariableObject());
+        ASSERT(iter->isVariableObject());
         JSVariableObject* scope = jsCast<JSVariableObject*>(iter.get());
         callFrame->uncheckedR(dst) = scope->registerAt(index).get();
         ASSERT(callFrame->r(dst).jsValue());
@@ -2736,7 +2737,7 @@ JSValue Interpreter::privateExecute(Exec
             ASSERT_UNUSED(end, iter != end);
         }
 
-        ASSERT((*iter)->isVariableObject());
+        ASSERT(iter->isVariableObject());
         JSVariableObject* scope = jsCast<JSVariableObject*>(iter.get());
         ASSERT(callFrame->r(value).jsValue());
         scope->registerAt(index).set(*globalData, scope, callFrame->r(value).jsValue());
@@ -4795,7 +4796,7 @@ skip_id_custom_self:
         CHECK_FOR_EXCEPTION();
 
         callFrame->uncheckedR(scope) = JSValue(o);
-        callFrame->setScopeChain(callFrame->scopeChain()->push(JSWithScope(callFrame, o)));
+        callFrame->setScopeChain(callFrame->scopeChain()->push(JSWithScope::create(callFrame, o)));
 
         vPC += OPCODE_LENGTH(op_push_scope);
         NEXT_INSTRUCTION();
