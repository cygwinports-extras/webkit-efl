Already in trunk

--- origsrc/webkit-efl-svn-r127150/Source/WebCore/platform/graphics/harfbuzz/ng/HarfBuzzShaper.cpp	2012-08-30 13:44:46.000000000 -0500
+++ src/webkit-efl-svn-r127150/Source/WebCore/platform/graphics/harfbuzz/ng/HarfBuzzShaper.cpp	2013-07-30 11:46:18.392877900 -0500
@@ -285,9 +285,9 @@ bool HarfBuzzShaper::shapeHarfBuzzRuns(G
             String upperText = String(m_normalizedBuffer.get() + currentRun->startIndex(), currentRun->numCharacters());
             upperText.makeUpper();
             currentFontData = m_font->glyphDataForCharacter(upperText[0], false, SmallCapsVariant).fontData;
-            hb_buffer_add_utf16(harfbuzzBuffer.get(), upperText.characters(), currentRun->numCharacters(), 0, currentRun->numCharacters());
+            hb_buffer_add_utf16(harfbuzzBuffer.get(), reinterpret_cast<const uint16_t*>(upperText.characters()), currentRun->numCharacters(), 0, currentRun->numCharacters());
         } else
-            hb_buffer_add_utf16(harfbuzzBuffer.get(), m_normalizedBuffer.get() + currentRun->startIndex(), currentRun->numCharacters(), 0, currentRun->numCharacters());
+            hb_buffer_add_utf16(harfbuzzBuffer.get(), reinterpret_cast<const uint16_t*>(m_normalizedBuffer.get() + currentRun->startIndex()), currentRun->numCharacters(), 0, currentRun->numCharacters());
 
         FontPlatformData* platformData = const_cast<FontPlatformData*>(&currentFontData->platformData());
         HarfBuzzNGFace* face = platformData->harfbuzzFace();
